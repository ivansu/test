##################################################
# file: SchoolInfoService_client.py
# 
# client stubs generated by "ZSI.generate.wsdl2python.WriteServiceModule"
#     /home/farhad/job/eduschl/src/web_edu/wsdl2py.py -b ./info.wsdl
# 
##################################################

from SchoolInfoService_types import *
import urlparse, types
from ZSI.TCcompound import ComplexType, Struct
from ZSI import client
from ZSI.schema import GED, GTD
import ZSI
from ZSI.generate.pyclass import pyclass_type

# Locator
class SchoolInfoServiceLocator:
    listUnitKindsPort_address = "http://localhost:9080/stdws/unitkinds"
    def getlistUnitKindsPortAddress(self):
        return SchoolInfoServiceLocator.listUnitKindsPort_address
    def getlistUnitKindsPort(self, url=None, **kw):
        return listUnitKindsPortBindingSOAP(url or SchoolInfoServiceLocator.listUnitKindsPort_address, **kw)
    listUnitsPort_address = "http://localhost:9080/stdws/units"
    def getlistUnitsPortAddress(self):
        return SchoolInfoServiceLocator.listUnitsPort_address
    def getlistUnitsPort(self, url=None, **kw):
        return listUnitsPortBindingSOAP(url or SchoolInfoServiceLocator.listUnitsPort_address, **kw)
    listUnitTypesPort_address = "http://localhost:9080/stdws/unittypes"
    def getlistUnitTypesPortAddress(self):
        return SchoolInfoServiceLocator.listUnitTypesPort_address
    def getlistUnitTypesPort(self, url=None, **kw):
        return listUnitTypesPortBindingSOAP(url or SchoolInfoServiceLocator.listUnitTypesPort_address, **kw)
    listTerritoriesPort_address = "http://localhost:9080/stdws/unittypes"
    def getlistTerritoriesPortAddress(self):
        return SchoolInfoServiceLocator.listTerritoriesPort_address
    def getlistTerritoriesPort(self, url=None, **kw):
        return listTerritoriesPortBindingSOAP(url or SchoolInfoServiceLocator.listTerritoriesPort_address, **kw)

# Methods
class listUnitKindsPortBindingSOAP:
    def __init__(self, url, **kw):
        kw.setdefault("readerclass", None)
        kw.setdefault("writerclass", None)
        # no resource properties
        self.binding = client.Binding(url=url, **kw)
        # no ws-addressing

    # op: listUnitKindsOper
    def listUnitKindsOper(self, request, **kw):
        if isinstance(request, listUnitKindsRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="urn:listUnitKindsOper", **kw)
        # no output wsaction
        response = self.binding.Receive(listUnitKindsResponse.typecode)
        return response

# Methods
class listUnitsPortBindingSOAP:
    def __init__(self, url, **kw):
        kw.setdefault("readerclass", None)
        kw.setdefault("writerclass", None)
        # no resource properties
        self.binding = client.Binding(url=url, **kw)
        # no ws-addressing

    # op: listUnitsOper
    def listUnitsOper(self, request, **kw):
        if isinstance(request, listUnitsRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="urn:listUnitsOper", **kw)
        # no output wsaction
        response = self.binding.Receive(listUnitsResponse.typecode)
        return response

    # op: unitsInfoOper
    def unitsInfoOper(self, request, **kw):
        if isinstance(request, unitsInfoRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="urn:unitsInfoOper", **kw)
        # no output wsaction
        response = self.binding.Receive(unitsInfoResponse.typecode)
        return response

    # op: unitDetailsOper
    def unitDetailsOper(self, request, **kw):
        if isinstance(request, unitDetailsRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="urn:unitDetailsOper", **kw)
        # no output wsaction
        response = self.binding.Receive(unitDetailsResponse.typecode)
        return response

# Methods
class listUnitTypesPortBindingSOAP:
    def __init__(self, url, **kw):
        kw.setdefault("readerclass", None)
        kw.setdefault("writerclass", None)
        # no resource properties
        self.binding = client.Binding(url=url, **kw)
        # no ws-addressing

    # op: listUnitTypesOper
    def listUnitTypesOper(self, request, **kw):
        if isinstance(request, listUnitTypesRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="urn:listUnitTypesOper", **kw)
        # no output wsaction
        response = self.binding.Receive(listUnitTypesResponse.typecode)
        return response

# Methods
class listTerritoriesPortBindingSOAP:
    def __init__(self, url, **kw):
        kw.setdefault("readerclass", None)
        kw.setdefault("writerclass", None)
        # no resource properties
        self.binding = client.Binding(url=url, **kw)
        # no ws-addressing

    # op: listTerritoriesOper
    def listTerritoriesOper(self, request, **kw):
        if isinstance(request, listTerritoriesRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="urn:listTerritoriesOper", **kw)
        # no output wsaction
        response = self.binding.Receive(listTerritoriesResponse.typecode)
        return response

listUnitKindsRequest = GED("urn:bars-web-school-info", "listUnitKindsRequest").pyclass

listUnitKindsResponse = GED("urn:bars-web-school-info", "listUnitKindsResponse").pyclass

listUnitsRequest = GED("urn:bars-web-school-info", "listUnitsRequest").pyclass

listUnitsResponse = GED("urn:bars-web-school-info", "listUnitsResponse").pyclass

unitsInfoRequest = GED("urn:bars-web-school-info", "unitsInfoRequest").pyclass

unitsInfoResponse = GED("urn:bars-web-school-info", "unitsInfoResponse").pyclass

unitDetailsRequest = GED("urn:bars-web-school-info", "unitDetailsRequest").pyclass

unitDetailsResponse = GED("urn:bars-web-school-info", "unitDetailsResponse").pyclass

listUnitTypesRequest = GED("urn:bars-web-school-info", "listUnitTypesRequest").pyclass

listUnitTypesResponse = GED("urn:bars-web-school-info", "listUnitTypesResponse").pyclass

listTerritoriesRequest = GED("urn:bars-web-school-info", "listTerritoriesRequest").pyclass

listTerritoriesResponse = GED("urn:bars-web-school-info", "listTerritoriesResponse").pyclass
